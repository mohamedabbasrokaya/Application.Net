@using Application.Models.ViewModel;
@model IEnumerable<ResultViewModel>
@{
    ViewData["Title"] = "Index";
}
<style>
    .row {
        display: flex;
        justify-content: center;
    }
</style>
<h1>Index</h1>
<br />
<a asp-action="Create" class="btn btn-primary">Create New Result</a>
<br />
<form asp-action="Index">
    <div class="row">
        <div class="col-sm-4">
            <input name="SearchValue" placeholder="Search By Name" class="form-control" />
        </div>
        <div class="col-sm">
            <input type="submit" value="Search" class="btn btn-success"/>
           
        </div>
    </div>
</form>
<br />
@if (Model?.Count() > 0)
{
    <table class="table table-stripped table-hover">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(M => M.ResultId)</th>

                <th>@Html.DisplayNameFor(M => M.ResultDegree)</th>
                <th>@Html.DisplayNameFor(M => M.student.StudentName)</th>
                <th>@Html.DisplayNameFor(M => M.Cources.CourcesName)</th>
                
                
               
                <th>Update</th>
                <th>Delete</th>

            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@item.ResultId</td>

                    <td>@item.ResultDegree</td>
                    <td>@item.student.StudentName</td>
                    <td>@item.Cources.CourcesName</td>
                    
                    <partial name="_ButtonsPartialView" model="@item.ResultId" />
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <div class="alert alert-warning">
        <h3>No Result Found!!</h3>
    </div>
}


